#!/bin/bash
# info: adding ssl for $domain
# options: USER DOMAIN SSL_DIR [RESTART]
#
# The function turns on SSL support for a domain. Parameter ssl_dir is a path
# to directory where 2 or 3 ssl files can be found. Certificate file 
# domain.tld.crt and its key domain.tld.key are mandatory. Certificate
# authority domain.tld.ca file is optional.

#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
user=$1
domain=$2
ssl_dir=$3
restart="$3"

# Additional argument formatting
if [[ "$domain" =~ [[:upper:]] ]]; then
    domain=$(echo "$domain" |tr '[:upper:]' '[:lower:]')
fi
if [[ "$domain" =~ ^www\..* ]]; then
    domain=$(echo "$domain" |sed -e "s/^www.//")
fi
if [[ "$domain" =~ .*\.$ ]]; then
    domain=$(echo "$domain" |sed -e "s/\.$//")
fi

domain=$(idn -t --quiet -u "$domain" )
domain_idn=$(idn -t --quiet -a "$domain")

# Includes
source $HESTIA/func/main.sh
source $HESTIA/func/domain.sh
source $HESTIA/func/ip.sh
source $HESTIA/conf/hestia.conf

# Additional argument formatting
format_domain
format_domain_idn


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '3' "$#" 'USER DOMAIN SSL_DIR [RESTART]'
is_format_valid 'user' 'domain' 'ssl_dir'
is_system_enabled "$MAIL_SYSTEM" 'MAIL_SYSTEM'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"
is_object_valid 'mail' 'DOMAIN' "$domain"
is_object_unsuspended 'mail' 'DOMAIN' "$domain"
is_object_value_empty 'mail' 'DOMAIN' "$domain" '$SSL'
is_object_valid 'web' 'DOMAIN' "$domain"
is_object_unsuspended 'web' 'DOMAIN' "$domain"
is_web_domain_cert_valid

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

if [ ! -d "$HOMEDIR/$user/conf/mail/$domain/ssl" ]; then
    mkdir -p $HOMEDIR/$user/conf/mail/$domain/ssl
    chmod 750 $HOMEDIR/$user/conf/mail/$domain/ssl
fi

# Adding certificate to Hestia user data directory
cp -f $ssl_dir/$domain.crt $USER_DATA/ssl/mail/$domain.crt
cp -f $ssl_dir/$domain.key $USER_DATA/ssl/mail/$domain.key
cp -f $ssl_dir/$domain.crt $USER_DATA/ssl/mail/$domain.pem
if [ -e "$ssl_dir/$domain.ca" ]; then
    cp -f $ssl_dir/$domain.ca $USER_DATA/ssl/mail/$domain.ca
    echo >> $USER_DATA/ssl/mail/$domain.pem
    cat $USER_DATA/ssl/$domain.ca >> $USER_DATA/ssl/mail/$domain.pem
fi
chmod 660 $USER_DATA/ssl/mail/$domain.*

# Adding certificate to user directory
cp -f $USER_DATA/ssl/mail/$domain.crt $HOMEDIR/$user/conf/mail/$domain/ssl/ssl.$domain.crt
cp -f $USER_DATA/ssl/mail/$domain.key $HOMEDIR/$user/conf/mail/$domain/ssl/ssl.$domain.key
cp -f $USER_DATA/ssl/mail/$domain.pem $HOMEDIR/$user/conf/mail/$domain/ssl/ssl.$domain.pem
if [ -e "$USER_DATA/ssl/mail/$domain.ca" ]; then
    cp -f $USER_DATA/ssl/mail/$domain.ca $HOMEDIR/$user/conf/mail/$domain/ssl/ssl.$domain.ca
fi

# Add domain SSL configuration to dovecot
echo "" >> /etc/dovecot/conf.d/10-ssl.conf
echo "local_name $domain {" >> /etc/dovecot/conf.d/10-ssl.conf
echo "  ssl_cert = <$HOMEDIR/$user/conf/mail/$domain/ssl/ssl.$domain.pem" >> /etc/dovecot/conf.d/10-ssl.conf
echo "  ssl_key = <$HOMEDIR/$user/conf/mail/$domain/ssl/ssl.$domain.key" >> /etc/dovecot/conf.d/10-ssl.conf
echo "}" >> /etc/dovecot/conf.d/10-ssl.conf

# Remove old SSL certificate files from exim configuration
rm -f /usr/local/hestia/ssl/exim4.key.$domain
rm -f /usr/local/hestia/ssl/exim4.cert.$domain

# Create symbolic link to certificate files
ln -s $HOMEDIR/$user/conf/mail/ssl.$domain.key /usr/local/hestia/ssl/exim4.key.$domain
ln -s $HOMEDIR/$user/conf/mail/ssl.$domain.pem /usr/local/hestia/ssl/exim4.cert.$domain


#----------------------------------------------------------#
#                       Hestia                              #
#----------------------------------------------------------#

# Increasing domain value
increase_user_value "$user" '$U_MAIL_SSL'

# Adding ssl values
update_object_value 'mail' 'DOMAIN' "$domain" '$SSL' "yes"

# Restarting mail server
$BIN/v-restart-mail $restart
check_result $? "Mail restart failed" >/dev/null

# Logging
log_history "enabled mail ssl support for $domain"
log_event "$OK" "$ARGUMENTS"

exit