#!/bin/bash
# info: stop system firewall
# options: NONE
# labels: panel
#
# example: v-stop-firewall
#
# The function stops iptables


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Defining absolute path for iptables and modprobe
iptables="/sbin/iptables"
modprobe="/sbin/modprobe"

# Includes
source /etc/profile.d/hestia.sh
# shellcheck source=/usr/local/hestia/func/main.sh
source $HESTIA/func/main.sh
# shellcheck source=/usr/local/hestia/func/firewall.sh
source $HESTIA/func/firewall.sh
# shellcheck source=/usr/local/hestia/conf/hestia.conf
source $HESTIA/conf/hestia.conf


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

#is_system_enabled "$FIREWALL_SYSTEM" 'FIREWALL_SYSTEM'

# Perform verification if read-only mode is enabled
check_hestia_demo_mode


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Self heal iptables links
heal_iptables_links

# Creating temporary file
tmp=$(mktemp)

# Flushing INPUT chain
echo "$iptables -P INPUT ACCEPT" >> $tmp
echo "$iptables -F INPUT" >> $tmp

# Deleting hestia chain
echo "$iptables -X hestia" >> $tmp

# Deleting custom chains
chains=$(cat $HESTIA/data/firewall/chains.conf 2>/dev/null)
IFS=$'\n'
for chain in $chains; do
    parse_object_kv_list "$chain"
    echo "$iptables -F fail2ban-$CHAIN" >> $tmp
    echo "$iptables -X fail2ban-$CHAIN" >> $tmp
done

# Applying rules
bash $tmp 2>/dev/null

# Deleting temporary file
rm -f $tmp

# Saving rules to the master iptables file
if [ -d "/etc/sysconfig" ]; then
    /sbin/iptables-save > /etc/sysconfig/iptables
    if [ -z "$(ls /etc/rc3.d/S*iptables 2>/dev/null)" ]; then
        /sbin/chkconfig iptables off
    fi
else
    /sbin/iptables-save > /etc/iptables.rules
    routable="/usr/lib/networkd-dispatcher/routable.d/10-hestia-iptables"
    preup="/etc/network/if-pre-up.d/hestia-iptables"
    # Recreate the Hestia iptables rules loading script
    rm -f $routable $preup
    if dpkg-query -W -f'${Status}' "netplan*" 2>/dev/null | grep -q "ok installed" && [ -d /etc/netplan ] && [ -n "$(ls -A /etc/netplan 2>/dev/null)" ]; then
        echo '#!/bin/sh' > $routable
        echo '' >> $routable
        echo 'if [ "$IFACE" = "'$(ip route list | awk '/default .+/ {print $5}' | uniq)'" ]; then' >> $routable
        echo '    /sbin/iptables-restore < /etc/iptables.rules' >> $routable
        echo 'fi' >> $routable
        echo '' >> $routable
        echo "exit 0" >> $routable
        chmod +x $routable
    else
        echo '#!/bin/sh' > $preup
        echo '' >> $preup
        echo 'if [ "$IFACE" = "'$(ip route list | awk '/default .+/ {print $5}' | uniq)'" ]; then' >> $preup
        echo '    /sbin/iptables-restore < /etc/iptables.rules' >> $preup
        echo 'fi' >> $preup
        echo '' >> $preup
        echo "exit 0" >> $preup
        chmod +x $preup
    fi
fi


#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

exit
