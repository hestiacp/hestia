#!/bin/bash
# info: delete user backup
# options: USER BACKUP
# labels: panel
#
# example: v-delete-user-backup admin.2012-12-21_00-10-00.tar
#
# The function deletes user backup.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
user=$1
backup=$2

# Includes
source $HESTIA/func/main.sh
source $HESTIA/func/backup.sh

source $HESTIA/conf/hestia.conf

backblazeb2_delete() {
    # Defining backblaze settings
    source $HESTIA/conf/b2.backup.conf
    b2util=$(which b2)
    # Recreate backblaze auth file ~/.b2_account_info (for situation when key was changed in b2.backup.conf)
    $b2util clear-account > /dev/null 2>&1
    $b2util authorize-account $B2_KEYID $B2_KEY > /dev/null 2>&1

    # Define file id in b2 by backup file name
    backup_file_id=$(${b2util} ls --long $BUCKET $user | grep "$backup" | cut -f 1 -d ' ' 2>/dev/null)
    # Deleting file in b2
    ${b2util} delete-file-version $backup_file_id > /dev/null 2>&1
    if [ "$?" -ne 0 ]; then
        check_result "$E_CONNECT" "b2 failed to delete $1"
    fi
}


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '2' "$#" 'USER BACKUP'
is_format_valid 'user' 'backup'
is_system_enabled "$BACKUP_SYSTEM" 'BACKUP_SYSTEM'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"
is_object_valid 'backup' 'BACKUP' "$2"

# Perform verification if read-only mode is enabled
check_hestia_demo_mode

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

backup_folder=$BACKUP

line=$(grep "BACKUP='$backup'" $USER_DATA/backup.conf)
parse_object_kv_list "$line"

deleted=0
if [[ "$TYPE" =~ "sftp" ]]; then
    sftp_delete "$backup"
    deleted=1
fi
if [[ "$TYPE" =~ "ftp" ]] && [ "$deleted" == "0" ]; then
    ftp_delete "$backup"
fi
if [[ "$TYPE" =~ "local" ]]; then
    rm -f $backup_folder/$2
fi

# Deleting backup
sed -i "/BACKUP='$2' /d" $USER_DATA/backup.conf

# Delete local/remote backups
if [ ! -e "$BACKUP/$backup" ]; then
   if [[ "$BACKUP_SYSTEM" =~ "b2" ]]; then
         backblazeb2_delete $2
   fi
   if [[ "$BACKUP_SYSTEM" =~ "local" ]]; then
         rm -f $BACKUP/$2
   fi
fi

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

# Update counter
U_BACKUPS=$(grep BACKUP $USER_DATA/backup.conf |wc -l)
update_user_value "$user" '$U_BACKUPS' "$U_BACKUPS"

# Logging
log_history "deleted backup archive $backup"
log_event "$OK" "$ARGUMENTS"

exit
