#!/bin/bash
# info: delete system IP
#       both kind of IP addresses, ipv4 and ipv6 are allowed
# options: IP
#
# example: v-delete-sys-ip 203.0.113.1
# example: v-delete-sys-ip 1234:5678:abcd:ef90::1
#
# This function for deleting a system IP. It does not allow to delete first IP
# on interface and do not allow to delete IP which is used by a web domain.

#----------------------------------------------------------#
#                Variables & Functions                     #
#----------------------------------------------------------#

# Argument definition
ip46=${1%/*} # clean ip address without cidr/prefix_length

# Includes
# shellcheck source=/etc/hestiacp/hestia.conf
source /etc/hestiacp/hestia.conf
# shellcheck source=/usr/local/hestia/func/main.sh
source "$HESTIA/func/main.sh"
# shellcheck source=/usr/local/hestia/func/ip.sh
source "$HESTIA/func/ip.sh"
# shellcheck source=/usr/local/hestia/func/domain.sh
source "$HESTIA/func/domain.sh"
# load config file
source_conf "$HESTIA/conf/hestia.conf"

# Variables
NETPLAN_FILE="/etc/netplan/60-hestia.yaml"
NETWORK_IF_FILE="/etc/network/interfaces"

#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '1' "$#" 'IP'
ip_format="$(get_ip_format "$ip46")" #	ip verification and format identification
retval=$?
check_ip_par=""
add_cap_string_ipv6=""
[ -n "$ip_format" ] && [ $ip_format -eq 4 -o $ip_format -eq 6 ] && check_ip_par=" -$ip_format"
if [ -n "$ip_format" ]; then
	if [ $ip_format -eq 6 ]; then
		ip=""
		ipv6="$ip46"
		add_cap_string_ipv6="V6"
		is_format_valid 'ipv6'
		is_ipv6_valid "$ipv6"
	else
		ip="$ip46"
		ipv6=""
		is_format_valid 'ip'
		is_ip_valid "$ip"
	fi
else
	check_result $retval "$ip46 is not a valid IPV4/IPV6 address!"
fi
is_ip_key_empty '$U_WEB_DOMAINS' "$ip46"
is_ip_key_empty '$U_SYS_USERS' "$ip46"

# Perform verification if read-only mode is enabled
check_hestia_demo_mode

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Import IP variables
source "$HESTIA/data/ips/$ip46"
if [ $ip_format -eq 6 ]; then
	prefix_length="$NETMASK"
	is_format_valid 'prefix_length'
	cidr_prefixlen="$prefix_length"
else
	netmask="$NETMASK"
	is_format_valid 'netmask'
	cidr_prefixlen=$(convert_netmask "$netmask")
fi

host_ip_check=$(hostname -i | sed -ne "/$ip46/p") # check, if IP address is primary (listed in /etc/hosts)
# shellcheck disable=SC1087
interface=$("$BIN/v-list-sys-network" plain | sed -ne "/$ip46/s/$ip46[ \t]*\/[0-9]*[ \t]*\(.*\)/\1/p") # interface for IP address
number_of_ips=$("$BIN/v-list-sys-network" list "$check_ip_par" | wc -l)                                # number of global system IP addresses

if [[ (-n "$host_ip_check" && -n "$interface") || ($number_of_ips -eq 1) ]]; then
	echo "Error: can't delete primary IP address"
	log_event "$E_FORBIDEN" "$ARGUMENTS"
	exit "$E_FORBIDEN"
fi

# Check if IP is managed by HESTIA and not by system
if [ -f "$NETPLAN_FILE" ]; then
	NETPLAN_MATCH="$(sed -ne "/[ \t]*-[ \t]*$ip46\//p" "$NETPLAN_FILE")"
fi
if [ -f "$NETWORK_IF_FILE" ]; then
	NETWORK_IF_MATCH="$(sed -ne "/address[ \t]*$ip46\//p" "$NETWORK_IF_FILE")" # first attempt for address/preflen definition
	if [ -z "$NETWORK_IF_MATCH" ]; then
		NETWORK_IF_MATCH="$(sed -ne "/address[ \t]*$ip46$/p" "$NETWORK_IF_FILE")" # second attempt, if address and netmask are defined in separate lines
	fi
fi
if [ -z "$NETPLAN_MATCH" -a -z "$NETWORK_IF_MATCH" ]; then
	echo "Error: can't delete system managed IP address"
	log_event "$E_FORBIDEN" "$ARGUMENTS"
	exit "$E_FORBIDEN"
fi

# Deleting system IP
if [ -n "$interface" ]; then
	ip addr del "$ip46$cidr_prefixlen" dev ${INTERFACE%:*}
	if [ "$?" -ne 0 ]; then
		echo "Error: can't delete system IP address"
		log_event "$E_FORBIDEN" "$ARGUMENTS"
		exit "$E_FORBIDEN"
	fi
fi

# Deleting startup conf on RHEL/CentOS/Fedora
# Need RHEL experts to fix me
if [ -e "/etc/sysconfig/network-scripts/ifcfg-$interface" ]; then
	rm -f /etc/sysconfig/network-scripts/ifcfg-$interface
fi

# Deleting startup conf on Debian/Ubuntu
if [ -f "/etc/netplan/60-hestia.yaml" ]; then
	sed -i "/$ip46\//d" /etc/netplan/60-hestia.yaml
	if ! grep -q '-' /etc/netplan/60-hestia.yaml; then
		rm /etc/netplan/60-hestia.yaml
	fi
elif [ -e "/etc/network/interfaces" ]; then
	if [ $ip_format -eq 6 ]; then
		filter_ip="${ip46}${cidr_prefixlen}"
		lines_after=0 # ipv6 is defined using prefix length in one line
	else
		filter_ip="${ip46}"
		lines_after=1 # ipv4 is defined using netmask in a separate line
	fi
	ip_str=$(grep -n $filter_ip$ /etc/network/interfaces | cut -f1 -d:)
	if [ -n "$ip_str" ]; then
		first_str=$((ip_str - 4))
		last_str=$((ip_str + $lines_after))
		sed -i "$first_str,$last_str d" /etc/network/interfaces
	fi
fi

# Deleting Hestia IP
rm -f "$HESTIA/data/ips/$ip46"

# Deleting web config
if [ -n "$WEB_SYSTEM" ]; then
	rm -f "/etc/$WEB_SYSTEM/conf.d/$ip46.conf"
fi

# Deleting proxy config
if [ -n "$PROXY_SYSTEM" ]; then
	rm -f "/etc/$PROXY_SYSTEM/conf.d/$ip46.conf"

	# mod_extract_forwarded
	fw_conf="/etc/$WEB_SYSTEM/conf.d/mod_extract_forwarded.conf"
	if [ -e "$fw_conf" ]; then
		ips="$(grep 'MEFaccept 127.0.0.1' "$fw_conf")"
		new_ips="$(echo "$ips" | sed "s/$ip46//")"
		sed -i "s/$ips/$new_ips/g" "$fw_conf"
	fi

	# mod_rpaf
	rpaf_conf="/etc/$WEB_SYSTEM/mods-enabled/rpaf.conf"
	if [ -e "$rpaf_conf" ]; then
		ips="$(grep RPAFproxy_ips "$rpaf_conf")"
		new_ips="$(echo "$ips" | sed "s/ $ip46//")"
		sed -i "s/$ips/$new_ips/g" "$rpaf_conf"

		# Remove RPAFproxy_ips line when ip list is empty
		[ "$(grep RPAFproxy_ips "$rpaf_conf" | sed 's/^[[:space:]]*//g')" = "RPAFproxy_ips" ] && sed -i "/RPAFproxy_ips/d" "$rpaf_conf"
	fi

	# mod_remoteip
	remoteip_conf="/etc/$WEB_SYSTEM/mods-enabled/remoteip.conf"
	if [ -e "$remoteip_conf" ]; then
		sed -i "/RemoteIPInternalProxy $ip46\$/d" "$remoteip_conf"
	fi
fi

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

# Updating user conf
if [ -n "$OWNER" ]; then
	decrease_user_value "$OWNER" '$IP'$add_cap_string_ipv6'_OWNED'
fi

if [ "$OWNER" = "$ROOT_USER" ]; then
	if [ "$STATUS" = 'shared' ]; then
		for hestia_user in $("$BIN/v-list-users" list); do
			decrease_user_value "$hestia_user" '$IP'$add_cap_string_ipv6'_AVAIL'
		done
	else
		decrease_user_value "$OWNER" '$IP'$add_cap_string_ipv6'_AVAIL'
	fi
else
	decrease_user_value "$OWNER" '$IP'$add_cap_string_ipv6'_AVAIL'
fi

# Restarting web server
"$BIN/v-restart-web"
check_result $? "Web restart failed" > /dev/null

# Restarting proxy server
if [ -n "$PROXY_SYSTEM" ]; then
	"$BIN/v-restart-proxy"
	check_result $? "Proxy restart failed" > /dev/null
fi

# Restarting firewall
if [ -n "$FIREWALL_SYSTEM" ]; then
	"$BIN/v-update-firewall"
fi

# Logging
"$BIN/v-log-action" "system" "Info" "System" "IP address deleted (IP: $ip46)."
log_event "$OK" "$ARGUMENTS"

exit
