#!/bin/bash
# info: change domain ssl certificate
# options: USER DOMAIN SSL_DIR [RESTART]
#
# The function changes SSL domain certificate and the key. If ca file present
# it will be replaced as well.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
user=$1
domain=$2
domain_idn=$2
restart=$3

# Includes
source $HESTIA/func/main.sh
source $HESTIA/func/domain.sh
source $HESTIA/conf/hestia.conf

# Additional argument formatting
format_domain
format_domain_idn


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '3' "$#" 'USER DOMAIN SSL_DIR [RESTART]'
is_format_valid 'user' 'domain' 'ssl_dir'
is_system_enabled "$MAIL_SYSTEM" 'MAIL_SYSTEM'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"
is_object_valid 'mail' 'DOMAIN' "$domain_idn"
is_object_unsuspended 'mail' 'DOMAIN' "$domain_idn"
is_object_value_empty 'mail' 'DOMAIN' "$domain_idn" '$SSL'
is_web_domain_cert_valid


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Deleting old certificate
tmpdir=$(mktemp -p $HOMEDIR/$user/mail/$domain/private -d)
rm -f $HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.*
mv $USER_DATA/ssl/mail/$domain.* $tmpdir
chown -R $user:$user $tmpdir


# Add certificate to user home directory
cp -f $USER_DATA/ssl/mail.$domain.crt $HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.crt
cp -f $USER_DATA/ssl/mail.$domain.key $HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.key
cp -f $USER_DATA/ssl/mail.$domain.pem $HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.pem
if [ -e "$USER_DATA/ssl/$domain.ca" ]; then
    cp -f $USER_DATA/ssl/mail.$domain.ca $HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.ca
fi

# Add domain SSL configuration to dovecot
# TO-DO: Add this confoiguration to a separate file for each domain
echo "" >> /etc/dovecot/conf.d/10-ssl.conf
echo "local_name mail.$domain {" >> /etc/dovecot/conf.d/10-ssl.conf
echo "  ssl_cert = <$HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.pem" >> /etc/dovecot/conf.d/10-ssl.conf
echo "  ssl_key = <$HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.key" >> /etc/dovecot/conf.d/10-ssl.conf
echo "}" >> /etc/dovecot/conf.d/10-ssl.conf

# Remove old SSL certificate files from exim configuration
rm -f /usr/local/hestia/ssl/mail.$domain.key
rm -f /usr/local/hestia/ssl/mail.$domain.crt

# Create symbolic link to certificate files
ln -s $HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.key /usr/local/hestia/ssl/mail.$domain.key
ln -s $HOMEDIR/$user/conf/mail/$domain/ssl/mail.$domain.pem /usr/local/hestia/ssl/mail.$domain.crt

chown -h $user:mail /usr/local/hestia/ssl/mail.$domain.*

#----------------------------------------------------------#
#                       Hestia                              #
#----------------------------------------------------------#

# Restarting mail server
$BIN/v-restart-mail $restart
service dovecot restart
service exim4 restart
check_result $? "Mail restart failed" >/dev/null

# Logging
log_history "changed ssl certificate for $domain"
log_event "$OK" "$ARGUMENTS"

exit
